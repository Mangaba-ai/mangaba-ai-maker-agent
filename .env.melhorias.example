# Configuração de Exemplo para Sistema Multi-Agente Mangaba.AI
# Copie este arquivo para .env e configure com seus valores

# =============================================================================
# CONFIGURAÇÕES PRINCIPAIS
# =============================================================================

# Ambiente de execução
FLASK_ENV=development
FLASK_DEBUG=true
PYTHONPATH=/app

# Chave secreta para sessões (MUDE EM PRODUÇÃO)
SECRET_KEY=your_super_secret_key_change_in_production

# =============================================================================
# API KEYS E INTEGRAÇÕES EXTERNAS
# =============================================================================

# Google Gemini AI
GEMINI_API_KEY=your_gemini_api_key_here
GEMINI_BASE_URL=https://generativelanguage.googleapis.com/v1beta/models

# Google Analytics (opcional)
GOOGLE_ANALYTICS_KEY=your_google_analytics_key
GOOGLE_ANALYTICS_VIEW_ID=your_view_id

# Salesforce (opcional)
SALESFORCE_CLIENT_ID=your_salesforce_client_id
SALESFORCE_CLIENT_SECRET=your_salesforce_client_secret
SALESFORCE_USERNAME=your_salesforce_username
SALESFORCE_PASSWORD=your_salesforce_password
SALESFORCE_SECURITY_TOKEN=your_salesforce_security_token

# HubSpot (opcional)
HUBSPOT_API_KEY=your_hubspot_api_key
HUBSPOT_CLIENT_ID=your_hubspot_client_id
HUBSPOT_CLIENT_SECRET=your_hubspot_client_secret

# =============================================================================
# BANCO DE DADOS
# =============================================================================

# PostgreSQL (recomendado para produção)
DATABASE_URL=postgresql://mangaba:mangaba_password@localhost:5432/mangaba_ai

# SQLite (para desenvolvimento)
# DATABASE_URL=sqlite:///data/mangaba.db

# Configurações específicas do PostgreSQL
POSTGRES_DB=mangaba_ai
POSTGRES_USER=mangaba
POSTGRES_PASSWORD=mangaba_password
POSTGRES_HOST=localhost
POSTGRES_PORT=5432

# =============================================================================
# REDIS E CACHE
# =============================================================================

# Redis para cache e queue
REDIS_URL=redis://localhost:6379
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_DB=0
REDIS_PASSWORD=

# Configurações de cache
CACHE_TYPE=redis
CACHE_DEFAULT_TIMEOUT=3600
CACHE_KEY_PREFIX=mangaba_cache:

# TTL por tipo de análise (em segundos)
CACHE_TTL_STRATEGIC_PLANNING=3600
CACHE_TTL_COMPETITIVE_ANALYSIS=1800
CACHE_TTL_DATA_ANALYSIS=1800
CACHE_TTL_SALES_ANALYSIS=900
CACHE_TTL_CREATIVE=600
CACHE_TTL_GENERAL=1200

# =============================================================================
# CELERY (PROCESSAMENTO ASSÍNCRONO)
# =============================================================================

# Broker e backend
CELERY_BROKER_URL=redis://localhost:6379/1
CELERY_RESULT_BACKEND=redis://localhost:6379/1

# Configurações de workers
CELERY_WORKER_CONCURRENCY=4
CELERY_WORKER_MAX_TASKS_PER_CHILD=1000
CELERY_TASK_SOFT_TIME_LIMIT=300
CELERY_TASK_TIME_LIMIT=600

# =============================================================================
# AUTENTICAÇÃO E SEGURANÇA
# =============================================================================

# JWT Configuration
JWT_SECRET_KEY=your_jwt_secret_key_change_in_production
JWT_ACCESS_TOKEN_EXPIRES=3600
JWT_REFRESH_TOKEN_EXPIRES=2592000
JWT_ALGORITHM=HS256

# Rate Limiting
RATELIMIT_STORAGE_URL=redis://localhost:6379/2
RATELIMIT_DEFAULT=100 per hour
RATELIMIT_FREE_PLAN=50 per hour
RATELIMIT_PRO_PLAN=500 per hour
RATELIMIT_ENTERPRISE_PLAN=unlimited

# CORS
CORS_ORIGINS=http://localhost:3000,http://localhost:8080

# =============================================================================
# PLANOS E LIMITES
# =============================================================================

# Limites por plano
FREE_PLAN_API_CALLS=100
FREE_PLAN_STORAGE_MB=100
FREE_PLAN_AGENTS=3

PRO_PLAN_API_CALLS=1000
PRO_PLAN_STORAGE_MB=1000
PRO_PLAN_AGENTS=10

ENTERPRISE_PLAN_API_CALLS=unlimited
ENTERPRISE_PLAN_STORAGE_MB=unlimited
ENTERPRISE_PLAN_AGENTS=unlimited

# =============================================================================
# MONITORAMENTO E LOGS
# =============================================================================

# Prometheus
PROMETHEUS_ENABLED=true
PROMETHEUS_PORT=8000
PROMETHEUS_METRICS_PATH=/metrics

# Grafana
GRAFANA_ENABLED=true
GRAFANA_ADMIN_PASSWORD=admin
GRAFANA_PORT=3000

# Elasticsearch
ELASTICSEARCH_URL=http://localhost:9200
ELASTICSEARCH_INDEX=mangaba-logs

# Kibana
KIBANA_URL=http://localhost:5601

# Log Level
LOG_LEVEL=INFO
LOG_FORMAT=json
LOG_FILE=logs/mangaba.log

# =============================================================================
# WEBSOCKET E TEMPO REAL
# =============================================================================

# Socket.IO
SOCKETIO_ASYNC_MODE=eventlet
SOCKETIO_CORS_ALLOWED_ORIGINS=*
SOCKETIO_LOGGER=false
SOCKETIO_ENGINEIO_LOGGER=false

# =============================================================================
# ARMAZENAMENTO DE ARQUIVOS
# =============================================================================

# Local storage
UPLOAD_FOLDER=data/uploads
MAX_CONTENT_LENGTH=16777216  # 16MB
ALLOWED_EXTENSIONS=csv,xlsx,xls,pdf,txt,json

# AWS S3 (opcional)
AWS_ACCESS_KEY_ID=your_aws_access_key
AWS_SECRET_ACCESS_KEY=your_aws_secret_key
AWS_S3_BUCKET=mangaba-ai-storage
AWS_S3_REGION=us-east-1

# =============================================================================
# EMAIL E NOTIFICAÇÕES
# =============================================================================

# SMTP Configuration
MAIL_SERVER=smtp.gmail.com
MAIL_PORT=587
MAIL_USE_TLS=true
MAIL_USERNAME=your_email@gmail.com
MAIL_PASSWORD=your_app_password
MAIL_DEFAULT_SENDER=noreply@mangaba.ai

# Slack (opcional)
SLACK_WEBHOOK_URL=your_slack_webhook_url
SLACK_CHANNEL=#mangaba-alerts

# =============================================================================
# MACHINE LEARNING E IA
# =============================================================================

# Modelos de ML
ML_MODEL_PATH=models/
ML_ENABLE_AUTO_LEARNING=true
ML_FEEDBACK_THRESHOLD=0.8
ML_RETRAIN_INTERVAL=86400  # 24 horas

# Embeddings para busca semântica
EMBEDDING_MODEL=sentence-transformers/all-MiniLM-L6-v2
EMBEDDING_DIMENSION=384

# =============================================================================
# API E INTEGRAÇÕES
# =============================================================================

# API Configuration
API_VERSION=v1
API_PREFIX=/api
API_TITLE=Mangaba.AI Multi-Agent System
API_DESCRIPTION=Sistema multi-agente para análise inteligente de dados

# Swagger/OpenAPI
SWAGGER_ENABLED=true
SWAGGER_URL=/docs
SWAGGER_UI_BUNDLE_JS=//unpkg.com/swagger-ui-dist@3/swagger-ui-bundle.js
SWAGGER_UI_STANDALONE_PRESET_JS=//unpkg.com/swagger-ui-dist@3/swagger-ui-standalone-preset.js

# Webhooks
WEBHOOK_SECRET=your_webhook_secret
WEBHOOK_TIMEOUT=30

# =============================================================================
# DESENVOLVIMENTO E DEBUG
# =============================================================================

# Debug
DEBUG_TOOLBAR_ENABLED=false
DEBUG_SQL_QUERIES=false
DEBUG_CACHE_OPERATIONS=false

# Profiling
PROFILING_ENABLED=false
PROFILING_SORT_BY=cumulative
PROFILING_RESTRICTIONS=30

# Testing
TESTING=false
TEST_DATABASE_URL=sqlite:///test.db

# =============================================================================
# PRODUÇÃO
# =============================================================================

# Gunicorn
GUNICORN_WORKERS=4
GUNICORN_WORKER_CLASS=eventlet
GUNICORN_BIND=0.0.0.0:5000
GUNICORN_TIMEOUT=120
GUNICORN_KEEPALIVE=5

# SSL/TLS
SSL_CERT_PATH=/etc/ssl/certs/mangaba.crt
SSL_KEY_PATH=/etc/ssl/private/mangaba.key
SSL_REDIRECT=false

# Health Checks
HEALTH_CHECK_ENABLED=true
HEALTH_CHECK_PATH=/health

# =============================================================================
# BACKUP E RECUPERAÇÃO
# =============================================================================

# Backup automático
BACKUP_ENABLED=true
BACKUP_INTERVAL=86400  # 24 horas
BACKUP_RETENTION_DAYS=30
BACKUP_S3_BUCKET=mangaba-ai-backups

# =============================================================================
# ANALYTICS E MÉTRICAS DE NEGÓCIO
# =============================================================================

# Google Analytics (para tracking de uso)
GA_TRACKING_ID=UA-XXXXXXXXX-X

# Mixpanel (opcional)
MIXPANEL_TOKEN=your_mixpanel_token

# Segment (opcional)
SEGMENT_WRITE_KEY=your_segment_write_key

# =============================================================================
# CONFIGURAÇÕES ESPECÍFICAS POR AMBIENTE
# =============================================================================

# Desenvolvimento
DEV_RELOAD=true
DEV_PORT=5000
DEV_HOST=0.0.0.0

# Staging
STAGING_DATABASE_URL=postgresql://staging_user:staging_pass@staging_host/staging_db
STAGING_REDIS_URL=redis://staging_redis:6379

# Produção
PROD_DATABASE_URL=postgresql://prod_user:prod_pass@prod_host/prod_db
PROD_REDIS_URL=redis://prod_redis:6379

# =============================================================================
# FEATURE FLAGS
# =============================================================================

# Funcionalidades experimentais
FEATURE_ASYNC_PROCESSING=true
FEATURE_ML_AUTO_LEARNING=true
FEATURE_COLLABORATIVE_AGENTS=true
FEATURE_REAL_TIME_ANALYTICS=true
FEATURE_ADVANCED_CACHING=true
FEATURE_EXTERNAL_INTEGRATIONS=true
FEATURE_TEAM_COLLABORATION=false
FEATURE_MARKETPLACE=false

# =============================================================================
# TIMEZONE E LOCALIZAÇÃO
# =============================================================================

# Timezone
TIMEZONE=America/Sao_Paulo
LANGUAGE=pt-BR
LOCALE=pt_BR.UTF-8

# =============================================================================
# OBSERVAÇÕES IMPORTANTES
# =============================================================================

# 1. NUNCA commite este arquivo com valores reais em repositórios públicos
# 2. Use um gerenciador de secrets em produção (AWS Secrets Manager, Vault, etc.)
# 3. Rotacione chaves e senhas regularmente
# 4. Use conexões SSL/TLS sempre que possível
# 5. Configure firewalls e VPCs adequadamente
# 6. Monitore logs de segurança regularmente
# 7. Faça backup das configurações críticas
# 8. Teste todas as configurações em ambiente de staging primeiro